(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    202003,       4013]
NotebookOptionsPosition[    195796,       3905]
NotebookOutlinePosition[    196231,       3922]
CellTagsIndexPosition[    196188,       3919]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Preparing for Meetings with Stephen Wolfram", "Title",
 CellChangeTimes->{{3.8657043252882977`*^9, 
  3.865704334545619*^9}},ExpressionUUID->"f86c9257-973f-4b4e-969e-\
e89eada41706"],

Cell[CellGroupData[{

Cell["\<\
(1) SW Meeting Checklist - Introductory Meeting (Thursday/Friday/Saturday) (5 \
minutes)\
\>", "Chapter",
 CellChangeTimes->{{3.856528184674152*^9, 3.856528192890785*^9}, {
  3.856528459606217*^9, 3.856528462117288*^9}, {3.865528797505341*^9, 
  3.865528801304193*^9}, {3.86570437788625*^9, 3.865704385918551*^9}, {
  3.86570500211618*^9, 
  3.865705005164229*^9}},ExpressionUUID->"384c0499-780f-411a-840c-\
a09cfb0edaac"],

Cell["\<\
In this meeting, you will talk with Stephen Wolfram in a group of 4-6 other \
students (plus your advocate, Megan and Rory). He will go around the group \
and ask each student questions.\
\>", "Item",
 CellChangeTimes->{{3.865528891512662*^9, 3.8655288982375727`*^9}, {
  3.8657050476975822`*^9, 
  3.8657050554757347`*^9}},ExpressionUUID->"83191a84-1ad5-4c23-abdc-\
1a98222f4531"],

Cell["\<\
He might ask questions like: where are you right now? what are you interested \
in? tell me about a project you\[CloseCurlyQuote]ve enjoyed in the past?\
\>", "Item",
 CellChangeTimes->{{3.865528891512662*^9, 3.8655288991253853`*^9}, 
   3.8657044663047457`*^9},ExpressionUUID->"271be3ac-b5ec-40da-a59c-\
3123b3828ec0"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["The goal of this meeting is for him to understand \
what kinds of projects you would be interested in doing at camp.",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.865528891512662*^9, 
  3.865528920188654*^9}},ExpressionUUID->"5da9f0b9-8f8a-4bb6-8227-\
eb5fb2667a0f"],

Cell["\<\
he will make decisions on your project based on what you say you are \
interested in during this meeting (and your written responses to application \
questions)\
\>", "Subitem",
 CellChangeTimes->{{3.865528891512662*^9, 3.865528996306806*^9}, {
  3.865703412873375*^9, 
  3.865703412877201*^9}},ExpressionUUID->"9e149bab-682d-4a82-8a77-\
22761d07de87"],

Cell["\<\
If you want to do a project about biology, but when he asks you what you\
\[CloseCurlyQuote]re interested in, you tell him you like to play chess and \
ride your bike, he won\[CloseCurlyQuote]t know you want to do a biology \
project\
\>", "Subitem",
 CellChangeTimes->{{3.865528891512662*^9, 3.865528996306806*^9}, {
  3.865703416373952*^9, 
  3.8657034539577227`*^9}},ExpressionUUID->"3fb768d6-e14a-42b3-8079-\
9256f2f58f51"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
In order to prepare for this meeting, please think about the following \
questions in advance and take some notes so you are ready to speak to Stephen:\
\>", "Item",
 CellChangeTimes->{{3.865528891512662*^9, 3.8655290266408653`*^9}, 
   3.8657044919387302`*^9, {3.865704531983902*^9, 
   3.865704553545166*^9}},ExpressionUUID->"79686d62-fd1c-4c87-9503-\
293160fd4f1b"],

Cell["\<\
(he won't ask these questions specifically, but you should still say your \
answers)\
\>", "Subitem",
 CellChangeTimes->{{3.865528891512662*^9, 3.8655290266408653`*^9}, 
   3.8657044919387302`*^9, {3.865704531983902*^9, 
   3.86570455167332*^9}},ExpressionUUID->"69bbb220-af45-4fdb-a5fd-\
3299ff7c6bf6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
What topics are you interested in doing a project about? Why?\
\>", "Section",
 CellChangeTimes->{{3.856528258130554*^9, 3.856528265627659*^9}, {
   3.8655289915095863`*^9, 3.865528993717298*^9}, 3.8657034850987673`*^9, {
   3.865703680289369*^9, 
   3.8657037129790916`*^9}},ExpressionUUID->"8e1a6e04-0f38-4de9-a91c-\
f010a4880799"],

Cell["chemistry/physics", "Item",
 CellChangeTimes->{
  3.856528268849379*^9, {3.8662818171790457`*^9, 
   3.866281821755842*^9}},ExpressionUUID->"ca9937f8-0b5a-499d-a7d4-\
8813aba20b6a"],

Cell[CellGroupData[{

Cell["computer science", "Item",
 CellChangeTimes->{
  3.8565282700193644`*^9, {3.866281827922781*^9, 
   3.866281830107155*^9}},ExpressionUUID->"eee3b728-119e-4f3d-8bae-\
0eb8978a1f66"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.866287707328199*^9, 
  3.866287720215424*^9}},ExpressionUUID->"d1540535-b63d-41dd-bc2b-\
5460a81f8cc6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["What\[CloseCurlyQuote]s the coolest thing you\[CloseCurlyQuote]ve \
studied so far? Why?", "Section",
 CellChangeTimes->{{3.856528299509192*^9, 3.856528355241516*^9}, {
  3.865703743351248*^9, 
  3.865703779982359*^9}},ExpressionUUID->"ed1c8639-b66f-47be-9b32-\
2b97cdaefae2"],

Cell["", "Item",
 CellChangeTimes->{{3.856528343342161*^9, 
  3.856528344158926*^9}},ExpressionUUID->"07e841e5-6731-47e1-94e1-\
a1598a949682"],

Cell["", "Item",
 CellChangeTimes->{
  3.856528343342161*^9},ExpressionUUID->"2379b514-d571-4e9b-89c7-\
40fb04ce83d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["What are your favorite extra-curricular activities? Why?", "Section",
 CellChangeTimes->{{3.856528271991366*^9, 3.856528288240818*^9}, {
  3.856528448029735*^9, 3.85652844929259*^9}, {3.865704496940027*^9, 
  3.865704497871673*^9}},ExpressionUUID->"d57b9778-9e1e-40df-9402-\
5a48abd54b9b"],

Cell["", "Item",
 CellChangeTimes->{{3.856528296024541*^9, 
  3.856528296688201*^9}},ExpressionUUID->"2f841ecd-d980-47b0-afa6-\
8a754c01c9aa"],

Cell["", "Item",
 CellChangeTimes->{
  3.856528296024541*^9},ExpressionUUID->"5b60512b-cc45-4173-9ea7-\
32574e580712"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
(2) SW Meeting Checklist - Project Allocation (Thursday/Friday/Saturday - 2 \
hours later) (5-10 minutes)\
\>", "Chapter",
 CellChangeTimes->{{3.8565281949456663`*^9, 3.856528205145317*^9}, {
  3.856528465718157*^9, 3.856528466350132*^9}, {3.865704360611981*^9, 
  3.865704397127819*^9}, {3.865704991932363*^9, 
  3.865704999485381*^9}},ExpressionUUID->"6617ebe3-3427-45e9-a0cd-\
1bcdde6da197"],

Cell["This meeting is the second time you will meet with Stephen", "Item",
 CellChangeTimes->{{3.865703793267136*^9, 3.865703821023232*^9}, {
  3.865705013350153*^9, 
  3.865705013350836*^9}},ExpressionUUID->"ef4718c6-0f8f-492a-b0df-\
eadcbd6cb0f6"],

Cell["\<\
You will see Stephen one student at a time, with your advocate, Megan, Rory, \
and someone who will take notes\
\>", "Item",
 CellChangeTimes->{{3.865703793267136*^9, 3.865703821023232*^9}, {
  3.865705014078817*^9, 
  3.8657050371908617`*^9}},ExpressionUUID->"f3179f58-36a1-46c7-8436-\
25a9ef47df22"],

Cell["\<\
He will talk you through what he thinks you should do for your project\
\>", "Item",
 CellChangeTimes->{{3.865703793267136*^9, 
  3.8657038589073887`*^9}},ExpressionUUID->"e297f8d3-ef49-4a98-a5bc-\
7325e0d77960"],

Cell["\<\
As you are listening, please think about the following questions:\
\>", "Item",
 CellChangeTimes->{{3.865703793267136*^9, 3.8657038735491123`*^9}, {
  3.865704402419591*^9, 
  3.865704403219256*^9}},ExpressionUUID->"25e875f5-8c32-4aee-8488-\
49e4d0abf91e"],

Cell["Are you excited about this project?", "Section",
 CellChangeTimes->{{3.86570419337682*^9, 
  3.865704198995557*^9}},ExpressionUUID->"4a81fb29-59c8-4cc4-9686-\
86e9e1eb89d5"],

Cell["\<\
Does this project feel like it will be hard, but not overwhelmingly so? (hard \
is good, panic is bad)\
\>", "Section",
 CellChangeTimes->{{3.865704200666521*^9, 
  3.865704219430327*^9}},ExpressionUUID->"0a8641af-4996-4b9b-b755-\
a9f9f76e2328"],

Cell[CellGroupData[{

Cell["\<\
If you don\[CloseCurlyQuote]t like your assigned project, please tell Stephen \
at the meeting \
\>", "Section",
 CellChangeTimes->{{3.856528361657433*^9, 3.856528388779669*^9}, {
  3.865704226054545*^9, 
  3.865704237299362*^9}},ExpressionUUID->"2a348d9d-ca9c-4dfe-b97e-\
e60bde1dd231"],

Cell[TextData[{
 "If you don\[CloseCurlyQuote]t feel comfortable speaking to Stephen, message \
your advocate, Megan, or Rory ",
 StyleBox["during the meeting",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0, 0]]
}], "Item",
 CellChangeTimes->{{3.865704602334242*^9, 
  3.865704636956799*^9}},ExpressionUUID->"b5b51583-cbaa-4492-be21-\
6266511db69e"],

Cell["\<\
if for any reason you didn\[CloseCurlyQuote]t tell someone during the meeting \
that you don\[CloseCurlyQuote]t like your project, tell your \
advocate/Megan/Rory immediately. Final deadline for project changing is the \
end of camp on Saturday July 9th.\
\>", "Item",
 CellChangeTimes->{{3.865704662793893*^9, 
  3.8657047246633673`*^9}},ExpressionUUID->"288bcfbf-2b17-4589-b911-\
c5caafe36da9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
(3) SW Meeting Checklist - Check In (second weekend) (5-10 minutes)\
\>", "Chapter",
 CellChangeTimes->{{3.856528140398056*^9, 3.856528174554328*^9}, {
  3.85652846852707*^9, 3.856528470274719*^9}, {3.865704369877281*^9, 
  3.865704376093668*^9}, {3.865704983595154*^9, 
  3.8657049880752087`*^9}},ExpressionUUID->"b34a677a-f4a0-4656-bd16-\
82571ae816ed"],

Cell["Stephen will ask how your project is going", "Item",
 CellChangeTimes->{{3.865704762698181*^9, 
  3.865704769041027*^9}},ExpressionUUID->"ea8edf34-d117-4ada-b6f0-\
40ed745c1729"],

Cell["\<\
Tell him what you\[CloseCurlyQuote]ve accomplished and what you have left to \
do\
\>", "Item",
 CellChangeTimes->{{3.865704762698181*^9, 
  3.865704782186777*^9}},ExpressionUUID->"ffe9a1af-4c53-48ab-bafc-\
69e741257026"],

Cell[CellGroupData[{

Cell[TextData[{
 "This is ",
 StyleBox["not ",
  FontWeight->"Bold"],
 "a technical meeting"
}], "Item",
 CellChangeTimes->{{3.865704762698181*^9, 
  3.865704791454733*^9}},ExpressionUUID->"361f1761-79e8-47e3-a8cf-\
d8f75dd4b500"],

Cell["do not ask how to code things", "Subitem",
 CellChangeTimes->{{3.865704762698181*^9, 
  3.8657047975536613`*^9}},ExpressionUUID->"81e47197-c70e-48db-b458-\
c14d4f57df6c"],

Cell["do not ask for content insight", "Subitem",
 CellChangeTimes->{{3.865704762698181*^9, 
  3.865704806544688*^9}},ExpressionUUID->"d1d88744-0404-468a-b360-\
31476c19e6da"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Questions you can/should ask:", "Item",
 CellChangeTimes->{{3.865704762698181*^9, 
  3.865704832818556*^9}},ExpressionUUID->"791b94fa-2ee4-4779-8fb8-\
b61fe1915bd1"],

Cell["how can I make this better?", "Subitem",
 CellChangeTimes->{{3.865704762698181*^9, 3.865704832387083*^9}, {
  3.8657049087244587`*^9, 
  3.8657049211473503`*^9}},ExpressionUUID->"f0789e20-482e-40fd-beb5-\
95919f8ca809"],

Cell["\<\
I think I\[CloseCurlyQuote]m going to finish soon, do you have suggestions \
for other directions?\
\>", "Subitem",
 CellChangeTimes->{{3.865704762698181*^9, 3.865704832387083*^9}, {
  3.8657049087244587`*^9, 
  3.865704939231552*^9}},ExpressionUUID->"4c6c1c48-2795-469c-96d3-\
d9cbb08193eb"],

Cell["\<\
I think I\[CloseCurlyQuote]m not going to reach the original final goal, do \
you have suggestions for how I should adjust? (talk to your mentor about this \
first)\
\>", "Subitem",
 CellChangeTimes->{{3.865704762698181*^9, 3.865704832387083*^9}, {
  3.8657049087244587`*^9, 
  3.865704969761079*^9}},ExpressionUUID->"eb6afe36-1af1-4477-a834-\
3f8bd5048084"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Favorite bit of code or fun visualization you are excited about\
\>", "Section",
 CellChangeTimes->{{3.8349111509099092`*^9, 3.834911157807074*^9}, {
  3.834911937574655*^9, 
  3.834911954143968*^9}},ExpressionUUID->"fba41f63-831f-44b6-b7cb-\
806d5480a21e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"generateAlkylTree", "[", "n_Integer", "]"}], ":=", 
   RowBox[{"Once", "@", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"With", "[", "\n", "\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"possibleSubBranches", " ", "=", " ", 
           RowBox[{"generateAlkylTree", "/@", "branching"}]}], "}"}], ",", 
         "\n", "\t", 
         RowBox[{"Outer", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Tree", "[", 
             RowBox[{"\"\<C\>\"", ",", " ", 
              RowBox[{"{", "##", "}"}]}], "]"}], "&"}], ",", " ", 
           RowBox[{"Sequence", "@@", "possibleSubBranches"}]}], "]"}]}], "\n",
         "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"branching", ",", " ", 
         RowBox[{"IntegerPartitions", "[", 
          RowBox[{
           RowBox[{"n", " ", "-", " ", "1"}], ",", " ", 
           RowBox[{"{", "3", "}"}], ",", " ", 
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", " ", 
             RowBox[{"n", " ", "-", " ", "1"}]}], "]"}]}], "]"}]}], "}"}]}], 
      "]"}]}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"generateAlkylTree", "[", "0", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"Tree", "[", 
    RowBox[{"\"\<H\>\"", ",", 
     RowBox[{"{", "}"}]}], "]"}], "}"}]}], "\n", 
 RowBox[{"generateAlkylTree", "[", "4", "]"}]}], "Code",
 CellChangeTimes->{
  3.866957959736184*^9, {3.8669601281753807`*^9, 3.8669601319887447`*^9}, {
   3.8669683628576517`*^9, 3.866968379084964*^9}, {3.8669727783973427`*^9, 
   3.866972805124956*^9}, {3.866972845925044*^9, 3.8669728700024757`*^9}, {
   3.866982851342635*^9, 3.8669828607845507`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"50896f96-92ae-48cf-ac93-705a53eae90e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree["C", {
         Tree["C", {
           Tree["C", {
             Tree["C", {
               Tree["H", {}], 
               Tree["H", {}], 
               Tree["H", {}]}], 
             Tree["H", {}], 
             Tree["H", {}]}], 
           Tree["H", {}], 
           Tree["H", {}]}], 
         Tree["H", {}], 
         Tree["H", {}]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.0983866769659336`, 3.0983866769659336`}, {
           2.32379000772445, 2.32379000772445}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.0983866769659336`, 3.0983866769659336`}, {
           3.0983866769659336`, 2.32379000772445}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.0983866769659336`, 3.0983866769659336`}, {
           3.872983346207417, 2.32379000772445}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.32379000772445, 2.32379000772445}, {1.5491933384829668`,
            1.5491933384829668`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.32379000772445, 2.32379000772445}, {2.32379000772445, 
           1.5491933384829668`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.32379000772445, 2.32379000772445}, {3.0983866769659336`,
            1.5491933384829668`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.5491933384829668`, 1.5491933384829668`}, {
           0.7745966692414834, 0.7745966692414834}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.5491933384829668`, 1.5491933384829668`}, {
           1.5491933384829668`, 0.7745966692414834}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.5491933384829668`, 1.5491933384829668`}, {
           2.32379000772445, 0.7745966692414834}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.7745966692414834, 0.7745966692414834}, {0., 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.7745966692414834, 0.7745966692414834}, {
           0.7745966692414834, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.7745966692414834, 0.7745966692414834}, {
           1.5491933384829668`, 0.}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["\<\"C\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {3.0983866769659336, 3.0983866769659336}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["\<\"C\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.32379000772445, 2.32379000772445}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["\<\"C\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {1.5491933384829668, 1.5491933384829668}],
          "DynamicName",
          BoxID -> "VertexID$3"], 
         TagBox[InsetBox[
           FrameBox["\<\"C\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.7745966692414834, 0.7745966692414834}],
          "DynamicName",
          BoxID -> "VertexID$4"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0., 0.}],
          "DynamicName",
          BoxID -> "VertexID$5"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.7745966692414834, 0.}],
          "DynamicName",
          BoxID -> "VertexID$6"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {1.5491933384829668, 0.}],
          "DynamicName",
          BoxID -> "VertexID$7"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {1.5491933384829668, 0.7745966692414834}],
          "DynamicName",
          BoxID -> "VertexID$8"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.32379000772445, 0.7745966692414834}],
          "DynamicName",
          BoxID -> "VertexID$9"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.32379000772445, 1.5491933384829668}],
          "DynamicName",
          BoxID -> "VertexID$10"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {3.0983866769659336, 1.5491933384829668}],
          "DynamicName",
          BoxID -> "VertexID$11"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {3.0983866769659336, 2.32379000772445}],
          "DynamicName",
          BoxID -> "VertexID$12"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {3.872983346207417, 2.32379000772445}],
          "DynamicName",
          BoxID -> "VertexID$13"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->FormBox["False", StandardForm],
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree["C", {
         Tree["C", {
           Tree["C", {
             Tree["H", {}], 
             Tree["H", {}], 
             Tree["H", {}]}], 
           Tree["C", {
             Tree["H", {}], 
             Tree["H", {}], 
             Tree["H", {}]}], 
           Tree["H", {}]}], 
         Tree["H", {}], 
         Tree["H", {}]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.6666666666666665`, 2.}, {2., 1.3333333333333335`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.6666666666666665`, 2.}, {2.6666666666666665`, 
           1.3333333333333335`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.6666666666666665`, 2.}, {3.3333333333333335`, 
           1.3333333333333335`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2., 1.3333333333333335`}, {0.6666666666666666, 
           0.6666666666666667}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2., 1.3333333333333335`}, {2.6666666666666665`, 
           0.6666666666666667}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2., 1.3333333333333335`}, {3.3333333333333335`, 
           0.6666666666666667}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.6666666666666666, 0.6666666666666667}, {0., 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.6666666666666666, 0.6666666666666667}, {
           0.6666666666666666, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.6666666666666666, 0.6666666666666667}, {
           1.3333333333333333`, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.6666666666666665`, 0.6666666666666667}, {2., 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.6666666666666665`, 0.6666666666666667}, {
           2.6666666666666665`, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.6666666666666665`, 0.6666666666666667}, {
           3.3333333333333335`, 0.}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["\<\"C\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.6666666666666665, 2.}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["\<\"C\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2., 1.3333333333333335}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["\<\"C\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.6666666666666666, 0.6666666666666667}],
          "DynamicName",
          BoxID -> "VertexID$3"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0., 0.}],
          "DynamicName",
          BoxID -> "VertexID$4"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.6666666666666666, 0.}],
          "DynamicName",
          BoxID -> "VertexID$5"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {1.3333333333333333, 0.}],
          "DynamicName",
          BoxID -> "VertexID$6"], 
         TagBox[InsetBox[
           FrameBox["\<\"C\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.6666666666666665, 0.6666666666666667}],
          "DynamicName",
          BoxID -> "VertexID$7"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2., 0.}],
          "DynamicName",
          BoxID -> "VertexID$8"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.6666666666666665, 0.}],
          "DynamicName",
          BoxID -> "VertexID$9"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {3.3333333333333335, 0.}],
          "DynamicName",
          BoxID -> "VertexID$10"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {3.3333333333333335, 0.6666666666666667}],
          "DynamicName",
          BoxID -> "VertexID$11"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.6666666666666665, 1.3333333333333335}],
          "DynamicName",
          BoxID -> "VertexID$12"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {3.3333333333333335, 1.3333333333333335}],
          "DynamicName",
          BoxID -> "VertexID$13"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->FormBox["False", StandardForm],
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree["C", {
         Tree["C", {
           Tree["C", {
             Tree["H", {}], 
             Tree["H", {}], 
             Tree["H", {}]}], 
           Tree["H", {}], 
           Tree["H", {}]}], 
         Tree["C", {
           Tree["H", {}], 
           Tree["H", {}], 
           Tree["H", {}]}], 
         Tree["H", {}]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.6666666666666665`, 2.}, {1.3333333333333333`, 
           1.3333333333333335`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.6666666666666665`, 2.}, {3.3333333333333335`, 
           1.3333333333333335`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.6666666666666665`, 2.}, {4., 1.3333333333333335`}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.3333333333333333`, 1.3333333333333335`}, {
           0.6666666666666666, 0.6666666666666667}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.3333333333333333`, 1.3333333333333335`}, {
           1.3333333333333333`, 0.6666666666666667}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{1.3333333333333333`, 1.3333333333333335`}, {2., 
           0.6666666666666667}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.6666666666666666, 0.6666666666666667}, {0., 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.6666666666666666, 0.6666666666666667}, {
           0.6666666666666666, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.6666666666666666, 0.6666666666666667}, {
           1.3333333333333333`, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.3333333333333335`, 1.3333333333333335`}, {
           2.6666666666666665`, 0.6666666666666667}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.3333333333333335`, 1.3333333333333335`}, {
           3.3333333333333335`, 0.6666666666666667}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{3.3333333333333335`, 1.3333333333333335`}, {4., 
           0.6666666666666667}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["\<\"C\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.6666666666666665, 2.}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["\<\"C\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {1.3333333333333333, 1.3333333333333335}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["\<\"C\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.6666666666666666, 0.6666666666666667}],
          "DynamicName",
          BoxID -> "VertexID$3"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0., 0.}],
          "DynamicName",
          BoxID -> "VertexID$4"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.6666666666666666, 0.}],
          "DynamicName",
          BoxID -> "VertexID$5"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {1.3333333333333333, 0.}],
          "DynamicName",
          BoxID -> "VertexID$6"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {1.3333333333333333, 0.6666666666666667}],
          "DynamicName",
          BoxID -> "VertexID$7"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2., 0.6666666666666667}],
          "DynamicName",
          BoxID -> "VertexID$8"], 
         TagBox[InsetBox[
           FrameBox["\<\"C\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {3.3333333333333335, 1.3333333333333335}],
          "DynamicName",
          BoxID -> "VertexID$9"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.6666666666666665, 0.6666666666666667}],
          "DynamicName",
          BoxID -> "VertexID$10"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {3.3333333333333335, 0.6666666666666667}],
          "DynamicName",
          BoxID -> "VertexID$11"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {4., 0.6666666666666667}],
          "DynamicName",
          BoxID -> "VertexID$12"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {4., 1.3333333333333335}],
          "DynamicName",
          BoxID -> "VertexID$13"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->FormBox["False", StandardForm],
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}], ",", 
   GraphicsBox[
    NamespaceBox["Trees",
     DynamicModuleBox[{Typeset`tree = HoldComplete[
       Tree["C", {
         Tree["C", {
           Tree["H", {}], 
           Tree["H", {}], 
           Tree["H", {}]}], 
         Tree["C", {
           Tree["H", {}], 
           Tree["H", {}], 
           Tree["H", {}]}], 
         Tree["C", {
           Tree["H", {}], 
           Tree["H", {}], 
           Tree["H", {}]}]}]]}, 
      NamespaceBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.3094010767585034`, 1.1547005383792517`}, {
           0.5773502691896258, 0.5773502691896258}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.3094010767585034`, 1.1547005383792517`}, {
           2.3094010767585034`, 0.5773502691896258}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.3094010767585034`, 1.1547005383792517`}, {
           4.041451884327381, 0.5773502691896258}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.5773502691896258, 0.5773502691896258}, {0., 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.5773502691896258, 0.5773502691896258}, {
           0.5773502691896258, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{0.5773502691896258, 0.5773502691896258}, {
           1.1547005383792517`, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.3094010767585034`, 0.5773502691896258}, {
           1.7320508075688774`, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.3094010767585034`, 0.5773502691896258}, {
           2.3094010767585034`, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{2.3094010767585034`, 0.5773502691896258}, {
           2.886751345948129, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{4.041451884327381, 0.5773502691896258}, {
           3.464101615137755, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{4.041451884327381, 0.5773502691896258}, {
           4.041451884327381, 0.}}]}, 
         {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
          AbsoluteThickness[1], 
          LineBox[{{4.041451884327381, 0.5773502691896258}, {
           4.618802153517007, 0.}}]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         TagBox[InsetBox[
           FrameBox["\<\"C\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.3094010767585034, 1.1547005383792517}],
          "DynamicName",
          BoxID -> "VertexID$1"], 
         TagBox[InsetBox[
           FrameBox["\<\"C\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.5773502691896258, 0.5773502691896258}],
          "DynamicName",
          BoxID -> "VertexID$2"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0., 0.}],
          "DynamicName",
          BoxID -> "VertexID$3"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {0.5773502691896258, 0.}],
          "DynamicName",
          BoxID -> "VertexID$4"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {1.1547005383792517, 0.}],
          "DynamicName",
          BoxID -> "VertexID$5"], 
         TagBox[InsetBox[
           FrameBox["\<\"C\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.3094010767585034, 0.5773502691896258}],
          "DynamicName",
          BoxID -> "VertexID$6"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {1.7320508075688774, 0.}],
          "DynamicName",
          BoxID -> "VertexID$7"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.3094010767585034, 0.}],
          "DynamicName",
          BoxID -> "VertexID$8"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {2.886751345948129, 0.}],
          "DynamicName",
          BoxID -> "VertexID$9"], 
         TagBox[InsetBox[
           FrameBox["\<\"C\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {4.041451884327381, 0.5773502691896258}],
          "DynamicName",
          BoxID -> "VertexID$10"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {3.464101615137755, 0.}],
          "DynamicName",
          BoxID -> "VertexID$11"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {4.041451884327381, 0.}],
          "DynamicName",
          BoxID -> "VertexID$12"], 
         TagBox[InsetBox[
           FrameBox["\<\"H\"\>",
            Background->Directive[
              RGBColor[
              0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
            BaseStyle->GrayLevel[0],
            FrameStyle->Directive[
              RGBColor[0.2823529411764706, 0.4, 0.2823529411764706], 
              AbsoluteThickness[1], 
              Opacity[1]],
            ImageSize->Automatic,
            RoundingRadius->4,
            StripOnInput->False], {4.618802153517007, 0.}],
          "DynamicName",
          BoxID -> "VertexID$13"]}}]]],
    AlignmentPoint->Center,
    Axes->False,
    AxesLabel->None,
    AxesOrigin->Automatic,
    AxesStyle->{},
    Background->None,
    BaseStyle->{},
    BaselinePosition->Automatic,
    ContentSelectable->Automatic,
    DefaultBaseStyle->"TreeGraphics",
    Epilog->{},
    FormatType->StandardForm,
    Frame->False,
    FrameLabel->FormBox["False", StandardForm],
    FrameStyle->{},
    FrameTicks->None,
    FrameTicksStyle->{},
    GridLines->None,
    GridLinesStyle->{},
    ImageMargins->0.,
    ImagePadding->All,
    ImageSize->Automatic,
    LabelStyle->{},
    PlotLabel->None,
    PlotRange->All,
    PlotRangeClipping->False,
    PlotRangePadding->Automatic,
    PlotRegion->Automatic,
    Prolog->{},
    RotateLabel->True,
    Ticks->Automatic,
    TicksStyle->{}]}], "}"}]], "Output",
 CellChangeTimes->{{3.866972857784903*^9, 3.866972870397622*^9}, {
  3.866982863754817*^9, 3.866982864600573*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"37f3d237-1aa1-48d5-8da1-d351482113a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"generateAlkanes", "[", "n_Integer", "]"}], "/;", 
   RowBox[{"n", ">", "0"}]}], ":=", 
  RowBox[{"Molecule", "/@", 
   RowBox[{"DeleteDuplicatesBy", "[", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"UndirectedGraph", "[", 
        RowBox[{"TreeInsert", "[", 
         RowBox[{"#", ",", 
          RowBox[{"Atom", "[", "\"\<H\>\"", "]"}], ",", 
          RowBox[{"{", "1", "}"}]}], "]"}], "]"}], "&"}], "/@", 
      RowBox[{"generateAlkylTree", "[", "n", "]"}]}], ",", "\n", "\t", 
     "CanonicalGraph"}], "\n", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MoleculePlot", "[", 
     RowBox[{"#", ",", " ", 
      InterpretationBox[
       DynamicModuleBox[{Typeset`open = False}, 
        TemplateBox[{"Expression", 
          StyleBox["\"Style\"", "IconizedCustomName", StripOnInput -> False], 
          
          GridBox[{{
             RowBox[{
               TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
               TagBox["Sequence", "IconizedItem"]}]}, {
             RowBox[{
               TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
               TagBox["3", "IconizedItem"]}]}, {
             RowBox[{
               TagBox["\"Byte count: \"", "IconizedLabel"], 
               "\[InvisibleSpace]", 
               TagBox["504", "IconizedItem"]}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          Dynamic[Typeset`open]},
         "IconizedObject"]],
       Sequence[
       ColorRules -> {Blank[] -> GrayLevel[0]}, Background -> GrayLevel[1], 
        ImageSize -> Tiny],
       SelectWithContents->True,
       Selectable->False]}], "]"}], "&"}], "/@", 
   RowBox[{"generateAlkanes", "[", "8", "]"}]}], "//", 
  "ImageCollage"}]}], "Code",
 CellChangeTimes->{
  3.866957959736184*^9, {3.8669601281753807`*^9, 3.8669601319887447`*^9}, {
   3.8669683628576517`*^9, 3.866968379084964*^9}, {3.8669727783973427`*^9, 
   3.866972805124956*^9}, {3.866972845925044*^9, 3.8669728504448357`*^9}, {
   3.866982866232212*^9, 3.866982878155167*^9}, {3.8669829187880487`*^9, 
   3.866982930982306*^9}, {3.866982976962907*^9, 3.866982977965712*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"385018e7-ca10-478a-ae3c-68974dac1eaa"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
1zH/yqtXr9Bb79+/36BBA9QIZgHa01TgwgijMVhtMQyjVYTF+/Dhw169eomo
a25ubmvWrBEnSnJ6qsXnkz8h0oBvt7Ozo+tQFeVelY0YldqiSkSF0rYpqph8
CBVlv8XExHTv3h11Qe0fSZ0xY8bLly8N8NVK8KzLUc/Jd4NCRlFT28ilCz+O
ikB1GOCrmbdCk8LatWttbW1RI1OmTKErG7Q6QDEKgdUWwzCahM5MYRpNT08/
ePAg+TWZm5vb29v7+PhAf9EzhplkySY/c+YMJaNNmzawuP7UYYBvNzDGo7ao
BlGVqFByS0MVS0rS0ZB+06dPJ8NSWPuPHj0ycDJCQ0MbNmwodnkKFy68fv16
AzQJfAW+CF8nvhrJyAnPyXeDAtdXu6gOVAqqxsDJYKSseSEpKaljx46oiyJF
ipw/f17i7S0mh2G1xTCMJhEW75UrV4YMGSI8mry8vAICAtLS0v7MwjDp+f33
35GkcePGkeijU2OaDEFsJGpL1B2qkgLxoXJRxcq53nfnzp0lSpQQQgMtn84M
ypgefc86pIcM3RwCH46vMJjn5L+CwtdPD6pG3vQYLdRDjxw5Qq7dPXv2JOXL
govJOVhtMQyjPWAGC6N31qxZhQoVooVlWMUTJ06Mi4uTsqxlg6kAUn8PHjyo
VatWLt2NPHQhkfameCNRW1RxqES6rwrVisqVlLGxde3aNTqZYuC9pH/FMHtt
it1L+vteG6oJlSV3uowL2t7Ci0GDBlnoOHjwoIihwTA5AasthmE0BmkoqK2X
L1/evHmTvLxgetnY2Hh4eBw5ckTSm3ANCQnARYsWkbU5Y8YMSoMSzOBsxBjU
FmUH1YdKJHse1SrlfMSVf+Xp06f9+vUzMTEhY97Kyuq7775LTU2VN1Vv8Hc1
hGLMFjWED8FHye45+W5QHagUVA0lEpWFKkPFyZ0uI+KPP/5A58Xs4O7ujiqo
U6fO8+fPJc0NU4xyYLXFMIzGoHPQmDfv3bs3bdq0cuXKkd1VoUKFyZMnR0ZG
0mOGV1t0FjszM7NFixa5dFHRQkJCJM1tbxmD2qIqQ/WRhyoqFNUq7/I4xQB0
dHQU+yY+Pj603aZM3vD0+3jPur97Tuaop+JHgqrRj5GIisvpGImMPlTUIoZJ
QEAA/qJJ125GCbDaYhhGYwiL5cCBAx4eHra2trSK3qFDh5s3b758+ZIu2JJl
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
kZE2b94sd4qY/w+rLU1CK/x+fn4kT9atW2eALxVG4MqVKyH0KPgtGDhwoNiM
kD5uyBo9ejQdPaYcseDSBvpN4vnz5xiL6tatS40HrcjZ2blly5ZnzpyhB6Ck
3kcf4RmhufC/+AR8jmiT+Hx8C77rrWlQPunp6Tdv3hw6dKjYubOzs4OoXLhw
Iaw+SWcBqnfnjmFUAQ1E6GjodOfOnevRo0cu3YUUjo6O9erV2759Oz3GPoSq
Q6Vqi5a7Hz9+XKJECTMzM/xMSEhQfrKNBFZbmoQOasEko7uDCxcuLA655Chn
z56tXbs21BA1qoYNG166dEnMNR/f6xMTE2m/rFy5cnT9MY8kmgG1efnyZW9v
b9JEmCxMTU3RgHfu3Cke+LCPpRf4HHwaPpPiW+Jb8F34RtXtbUEkzpgxI1++
fFRKyEiePHnGjx8fHx8vcdwzhjEUYkEDXU/f57lo0aILFix48OCB9FenX0Yt
qFRtSVlL0EuWLKGmOGHCBLlTxPw/WG1pFRrhV69ebW9vj/qFMZajY0V0dHT3
7t2FzipZsuTWrVtzYk1v7dq1ZCojRxI7aagZOjlFs0NkZGT//v3z5s0rmlCJ
EiWWLVuWkJCQXVWMz8Gn4TNFyD58F74R30t7r5QYBU6p4jwa0rZixQp3d3cb
GxvyjcTPvn37hoWF0ZYWwzAGg8YudM/g4GBa2KS5qUmTJvqX/SlwSGHejXrV
lpQ1kVWvXh2zA2aKu3fvqiXl2obVloYhMxUjP00Bt2/fzolvSUlJmTt3rpOT
EzUkiDs/P7+cu9nn5cuXFPSpaNGidPpGXXsTjJR1VQHZKvHx8ZMmTapYsaKD
gwM1IRcXl2nTpt28eVO4An6kxaL/7/hMfDI+H99CX4fvxbcjDbQ3RIH+FDI9
oQuLQvj555+bNm0qzkKC9u3bBwUF6W9bKyTZDKNtxEoRXly/fv3777+n4Biw
bytXruzv70/BMZS5esP8K6pWW3S299ixY7R02a5dO0k9idcwrLY0DMmQM2fO
5M2bF1Xctm3bbOlx4kMyMjIOHDhQoUIFakJWVlbo1/fu3ZNyuGsjR+Rs1rlz
Z7Lbc+67mOxFP/p6enr6smXLmjdvLqJWogn179//8OHDycnJ9Hw2mitkINFr
fD6+Bd+Fb6SvRhqQEqQHqXojnbKgf4vWqVOn+vbt6+7uLnRW/fr1V6xYcefO
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
9+5dtVcp1JZy+FBbQW0BAAAwTaC25IWXsR4/ftyoUSNqiMqVK4eHh0uQEn+H
n58fVVHOnDmDg4MlrABmFuH0XrlyhcMyHRwc/P39JfVXKdSWouCNgW/fvqV2
UXvXAgAAADIN1JbssLDatm0b6Qhqi/Hjx7NzgqlgXUgasP/89ddfS+rXBTIi
+lXbtm0tLCyoSunFmzdv5C2VXoDaAgAAAIDSgNqSHRZWiYmJvXr1orYoXLjw
iRMnJCxvveNPLXXq1DEzM7Ozs4uIiIAUzTS8m+aPP/44cOCAo6MjVWmxYsU2
b94sGUV6FqgtAAAAQIHQAJ2WliZ3KWSD1ZaLi4vcBTFp2EskkcXHHvXo0SM9
PV3CCs67GtiwYQM7z2PHjpWwASQLcH0mJCTUqFGDq3T48OHx8fEktYygs0Ft
AQCMEj4DUeHw1KjcVaVuuCblLoX+oQ7cuXNnCwsLzk5ggvDGDWtra3iw8sLP
15gxY6g3WllZ7dixg88JlbtccsLHPZM0KFGihJmZWeHChd+8eWOUhsgwUHei
2iMhv3bt2hxaSpcufebMGckoFrYkqC0AAJAbOJOZRlSdkfl+ly5dqly5co53
tG/f/tGjR3IXynDQzdIti9unqqAKkbtQpgs5ivR83bx5s2LFitQcderU4fOk
TFlcsPM8duxYS0tLqpMNGzbIXSJ1wwY8MjKyfPnyvGNr4cKFSUlJRpPEAGoL
AGCUpKWlxcTEJCiY+Pj4GzdunD9/XoLgyhQ8Cj9//vzhw4f8FyOoRrqdnj17
cs5tXaytrSdNmiSOvDdW6AbpNulm37t9qhCqFqocuQtoorCvOH/+fFtbW2qO
gIAA44jvyhwck3D37l1nZ2eqjRo1avDBu3KXS61wRyLdMWPGDH7eK1WqdO/e
PclYFrYkqC0AgJGyefPmDh06dO/evYsi8fX1pX+rVKlSrlw50lwcRyF3nakJ
jmWisXjKlCk0fu3cuTM5OVlSs+CiYXfmzJl2dnZCX1AnOXz4cN26dYXoKFy4
MHVs9d7jR6CbolujGxQ3SzdOt0+VILQnVQ5VEfwTw/OXNmEy+4rUECVKlLhz
546k5sctK7Dn3L59e0tLS/Kcz58/b5r1oC/evn1L/9LDXqhQIXrYzczMyJ7/
pc03YjTDItQWAMCYEKeE9+7dO4dKGDRokPRuxAGfCA9eZ86ccXNzy6GNtUtK
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
NJckCqEkqcxknsoYT5llnh6eeeaZ5yeS2eN5hkxlfF6mR5RQxihJohTNoybP
4/zW766P/Tu/MiTde869d33/8Mntdu9a+6y991p7r732q1dCC/VD4LJSy5Yt
seo7mAeZAUHIOxhVXbx4EXwbGKkmTJiAL4q5d9+4cQO31/v3749n6oWWiFAc
ikdbFy5cADOjaKtsKb61AU7FwoULGzZsqKWlhV63kZFRu3btvLy8mPv036c9
dzEPUN8ET6jxC1ZHR0cvWbKkcePGFStWRN0NDQ2dnJx+++03XFPiPhVSUBjd
2YLey5cvV61a1bx5cyzlDejr6zdp0gRefPr0Kb4HdZf3zU3UnZ8DD4bt7e3t
7OxsaWmJWzNgA9u2bUtKSkJNKXmjJKAP8Pvvv4PlQBvOnj0bBxZ5tBZ84rt2
7cLZZ+7cuUJLRBDEj4JjUWpqavfu3aFf16tXLzQ0FL0goUX7GjAcjRgxAp0x
f39/jpIuiLKDRVudO3fG+S4gIABewWpXxI+DqYPsv9Cdw8LCDh48OGnSJCsr
q+IlcZo1azZr1ixfX1/+Gi/WFhDtFvyXKKI78Pjx4yNHjkyZMsXGxqa47o0a
NZo6derRo0cjIiKY441DtMjXxIpTXHdQ6tixYzNmzGjQoEFx3e3t7SdPnnzo
0KFHjx7xl9TkV3e+zBBIgklDXABhJl9rCLsWLVqUkJCAb6NoqyRAw0IMW1BQ
gEtkELY/fPhQviwEwa4NsTaMhKBIjRo1UlJS5FERgiD4YFbDgQMHMG9n8eLF
3KdlIpHz4sULXAls06YNjLGKl9hPCAU6hK9fv8ZEDrCxs2fPcvK5TCpmcPCB
GDYoKAjirOrVq6O3CW1evnx5lU8wL7ROnTrz58+/e/cueq3y7oXibmloaOi0
adNq1679dd1r1qw5c+bMW7du4XaY3MWYRcDUr/v370OsYW1tjTqiykx9pru5
ufkvv/wCRgKmogDJhBgXhIWFLVy40NbWFnUErWH+Ba0NDAz69u3r5+eHpR44
Eaf0iw0ctwMDA42MjKBJe/ToAe0stFDfDXpfU6ZMwS6wf/9+oSUiCOJHwWnr
5cuXOOY7OTnFx8fLy3IxDK3r168HsfX09DZv3szJSZBIiB80pJiYGJy1y0mu
cYH/ykvXECcsh4rtbhQUFJw/fx6CiA4dOlhYWIDDyV/e7yfBzMyMvQhvgKik
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
E9555x2pZflb4OhmZGS0bNnS2Ni4adOm9+7dU9CrE4xSIIum0Wi6dOmCrB5/
f3+8Aiy1XLoA1jAiIgIlpExNTY8cOYJfGUgPMIwuKZucfPbs2YCAANhiWnqd
O3fevXs3fmUIZ+svBu7Y4vs9e/ZQp4nFMYYOHSq+Fq1PSeA0GbZv3z5nzpzz
589HRkZGRUWdkCXR0dGHDx/28PBQqVROTk5Xrlzhg1rmZcjLy3NwcKClbWNj
k56eLrU4z01hYWHt2rWNtFvZSUlJUovzT+A1DXIFYYwmT54s8PEWU36I/sz8
+fNtbW1pmrVr1+7ixYvSSqVLsHdRVFQUHBwMj6V9+/YPHz4UeKExTIWBdVdS
UrJ582ZyJ0xMTMjAWVlZjRs3LisrS+Bo6+9BtEVfs7Ozx48fT24MdR11YLVq
1TZu3KjHVWSVopBPnjwJU4InXJUiNiNPvvrqK0yn9957T2pZnpt58+ZBePIw
pZblX4C50Wg0/fv3J4FdXFxOnDjx22+/8fplygXsfyYkJNSvX1+tVltYWMyd
O1cpz5qUF2jslStXGjRogHyV0NDQwsJC8lh4W5JhKgJRw9C68/X1rV69Og7W
vby8IiIi8vLyYPt4Af4BdAh1Tm5ubnh4eOfOnY20t4SoA6kbL1y4gI+xhyAh
1Pmob1a1atU9e/YYmj1lyhda8qiBo1KpSFtKLc5zkJSUZGlpSZLXrl27qKhI
anH+HWjXs2fPWllZUW/7+fkJbIOY8uDXp++Nvv/++7iM2adPH7zxrZdbo38H
oirSBmvWrME+TMOGDfXyWWeGkQliST0KrA4cOCBeoyYHdeDAgVh9Ai/APyF2
yLVr16ijUJOB8PT03L9/P4VgyIcxKAUuQ8iMksOGXBEMBx/UMi9MdHQ0lnmn
Tp2kluU5GDx4MMTeuXOn1LI8E+IW38yZM5G9uWPHDoHNEPNywAQQFy9erFy5
somJiZ2d3datWwWDfGgA2xdpaWktWrRQq9W00GbPnp2Tk0OrjHc2GKbcEV9T
oq/5+flTpkyxsLBAlWAKuNasWVNcXCywmfsT6BDqnNDQUNLY2PGmrpswYQIK
jBig9pYhNL2XLFlCo0Mx1+LFiwWeyczLIUYu4kPwMufUqVMQuGPHjlLL8hzA
37t582b9+vVJ+F69eqWnp+vTHVhG98AoP378eODAgXByRo0a9eDBA/q5Ae6L
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
6Fua84MGDULeL3I45bbJQBK6uroaGxvXr18fWY6GZibu3LmDrLMuXbpQmKPj
C93o7VWrVuGhFjc3txMnTuhSAP0Db6o+fvx49OjR1KUUcFEAW1hYKMjASjKM
XiKurJSUlOnTp5M1wct3ZFxCQkISExNhEPVgAWLfBjXrqGlISKDGuru7T5s2
LSkpSfyYtHIy5QLGccmSJSjovWzZMtxSlEqestXd4+LiZs6cKR6tkvNATj5e
CxX0tDSNnElISIAnWadOneLiYqnFeQ5oUrVp0wZ3zS5cuCC1OM8NVsSmTZtQ
FmbBggWy3e8KCwvDag0MDBQMbJHSoAwcOBD5ewhzdGYlxdrIZKDbt2+Pk9yx
Y8fqUgZ9BXP4p59+ImdPpSU8PLykpESf0pkYRj6I1TDIzbh8+TJqCyCjxtPT
Uyx4pQfGRWzC/v37qWmktNHSwYMHX7p0iZqPD7Ce0Q9wPPTo0aOuXbvSKLu4
uKCIliTjS5JgdpEto0jfy8sLc8/c3Hz8+PGnT5/Gx6SNBw0WRdf3O3v2LOoo
kk6TZ5zyd8Bbjo+Px3sNbdu2vXPnjiBXDVxUVNSzZ0+U7b1y5YpgSN7+sWPH
sED8/f0FnRfHwDezZs2qWrUqyUAxF9lrgy1XUo7AKmVlZS1YsAA7z+3ataP1
KBjS3GYYHSPuuq9du5Z0Go63sI+Xn59fNv1JuaD2BTVnxowZaB15Kba2tqtW
rRI/IK2ETPmCWb1t2zZcCZk8eTKNvo43z8Vnsom9e/f26dNHfNuuX79+hw4d
wmEKbydKRVRUFIajS5cuUsvygohvhOG1WaWACb9kyRIIj9tAcnbzLl68CFEH
DBggGIy9IC2K17Rr1KiBK426fGALfysuLq527drYBF68eLFgMJ1f0aAbb9++
jVQfYuXKlSUlJcgzlFo6htFDxGjr8uXLAQEBjo6O2C/t0KHDjh07MjMz8QE5
m8J/AGJTE7Kysqg5nTp1QqhF5mPYsGGXLl3Cxwzw7rN+g12CgoIC3AqhyBpp
MLrxFsruUVy5coVmGuowoKjX119/LVY2UOiy0gOo55s2bYr7m9euXZNanBck
OTkZ6bLOzs4026UW55nAnCfd6+7uTpK/9dZbjx8/FuR6sAVKS0snTJhA0lar
Vm337t2CYZgMcr9x8IErjbpUVpgMhYWFI0eOtLKyIjFIk9+5c4evtZYX2Hss
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
GIZhGEYH/B+xZOFW
    "], {{0, 604.}, {1146., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{393.28125, Automatic},
  ImageSizeRaw->{1146., 604.},
  PlotRange->{{0, 1146.}, {0, 604.}}]], "Output",
 CellChangeTimes->{{3.8669728071494913`*^9, 3.8669728076439133`*^9}, 
   3.866982864434174*^9, 3.866982897910861*^9, 3.866982932172193*^9, 
   3.8669829792884274`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"c735ab82-25f9-4a41-9030-ed14a06b96d2"]
}, Open  ]],

Cell["(Unrelated)", "Text",
 CellChangeTimes->{{3.866972623390609*^9, 
  3.866972630043425*^9}},ExpressionUUID->"72034e05-a4b7-408a-8cfa-\
096a38682ac2"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJy1mnd0llW2xjNUM9ImEmEglFCkCEQS6S0oCBJKaBqkZ4HEAFJDIA0iMXSB
oQmjEnroxYgDIx0yoCBFYCa0IJ0RCASHGuCuu4Xs9/vd9+T94qzrP66Hc959
dn32PueLb+iQTv3zeHh4bM3v4fG////tv9vNPB5vDPap2yfw+T8ETswTNKD6
qwOe45cCq14ourr6vUHPcbFAjzdi9n/18jBX3HHoc1w8sOqVh/4NOo3Ixr+c
rjB9//Hh2Xjt0aBf3l/x4vuSgatO7vNP7xmRjZ+9Xnrim6dHZuPUL+t1WF5Q
133uTl36uIaud40fenbShhfYJ/DV5qviwxpEuuIto1zxUeCHEa54JdavA38E
3AC42gtcPjBzd8GaGTdGu+Ahw11xxjisr4t0xWHY3xJ4FL7PwvcFsH8Q9mdi
fxfsrw0cCnzf9fuMAMiriP2HX6xXCBxZ6usjK+OisrH/wpUXx/9Rcf52S1p6
eyvec3R+SEbrMdk4o2LSvZ63FK9NnutZ/9gY1/0PFMe/N2PggQTsj8L6GcVN
TyfGLQkzyw+vOc3HazNwL8VVN433uzEf8nZCvyTF88bO2jputeIu+SYf+iB9
tPF7Wb+q2GvSuPNv/mC2V9ZHQJ9iio8UjrxbZL1Z/6zesTNjsyCvosZH4jEX
5x9X/ekfkddW8ZW6UW+lnoD8V158XymwX5FrxSLvRmfjjy9PiU/5VPFLYyuX
bj9dsdd7B6ZMORCVjWufTjn7dh9db7QppH18G8Xfj2wfefYjxSeCMq+WytLv
rz9scGBOsK7fPXK2wU8XdH1aeORPg1ro+rzmpVusOqnrazJCK1d+Xdc3pxaY
G+oNvE337/xyVYGkZ4qD+yT5ZZWF/pm6Tn3TK8wNCamr+OmK+FXFKsNfRaFv
LcWLS+5IuVrSrB/1+aBei6QGG6F/hyjXdU/d/1s8HfS/Av8fUTz6O7/MOxmK
x8/6KdTPH/HvCOyr2DYe/c3nS77l1/1y/jxdZ7wl3+ojXt87+CMI+RVuzkc5
v5lixsv2/AqKxb7P4L9sfnvun7y6v+WkrO3b+ymW+K7Q70X/v8K+jci/rvq9
1MtIxT41B2ftnwX/lsB6d5Un+pyB/Aj4I0yx1PdM5FN5xZIfDxHvOojHVuT3
QvWX6NPjxfprgaeqtq3csENsNu7eokTqZ1djsnHW5+ub/nhHcWxKVHoFf8Xf
veY9/cE2xU3eOu/Xbp3intFrC9bfr/jc3NHJU/so/vJmq28LL1Vc1vOVkNDG
irf3XH1k0VeKA8eMGnavruKnh1uOi4xSPPaXYr4Hw4G9FHsUPLOrfHfF5QNX
zn85wuH8d3B+YrSr/HD35S/qPrJhn/5mf/Te9Pa7Pz+INsqLr7AiNOJutHH/
+UNF/l1nZrTr/iD9Pk/T4Xm/b6R4YaVzDzbXgL5loG9hxbtmN/cKqqL4rQ2F
vl44RHHf62mTJ09CPrznYG+S6uukD+Mv+hyGv/Ka/V0hstnplCfwV3PoX9uM
L+Rb9nr6GPhzljnfbP3ZM9oo3yleYt/qaFd53ygW+/6j9S36+prlje/WZGnZ
BOi7zyzfNv4lgHfo/j0//LPzr+ujjev0Z7/yQw8GhJvz3Ul/sb+r4iV/+WOM
p4U/hL8mo95nox6Oo76CzfzCfJP8POeQX2nwb2FzftK/zH+RF4/4d0U8LPUp
8eht9q+t/27B/xejXdct/q207oRPr89wXkHEdzfid8bMD8x35l9u/Ut9nPKJ
9pFvxX9vO+T3MPjXEt8WVxf/2toiT8638F++iJdajjgI/14x55/Ib4fzLfVv
64/3cX4C/DsT8Z+iWPRJRL1b/HupUaPBEzeBP33dt+9M7wsfXhyLfv+9nsf+
zPplf2C+y3o587rkUzX45zjiuczcf+lv1hP5TtabIj8s/ZH+Er72Rrz/rHjZ
gaRtm+Je7K8amOBXtX6pOXGuOEBx0r35XX5uCpwQm43TEmKnDXkpzhU/1fV7
QRkr6xaPc8WbdN3v1LELe68Cf6o4aFGLZ1OuA09QLPpuA/4auDvwSsViz3bg
M8BRirdte3lYciLwQfWn2JcM+79S7PVK39QnXwOvhH0zgf0Uh4VtLt15FnBt
837Bh2Jc90/C92Md/NURuBX80wN4Ffyz0yG+tPefyM8c9JHzPgTOh/z8C/Ab
iM9sYH/oOwC4pwNeDXt2OcSzEXC82m/r307wbxhwL4f4pwGXizHKF9zaLF/w
Gvi3odnfgv8V44p/RP00NsdD8CnsP+LwvWW/1Nsc1N8UxC8/cGfgRfDvR8Df
wt7l0GcT8IMYV/nROG+Ymf8EV0Z9PHTIn0fwP+PzGvCP2O/jEJ934N+OwPNU
nug/wuxP8pPgCLM9tvmZBX/cxv412L/YwR8+wF6wfxzwj7D/oplvbflsDfz/
GuTnkO/MZ9t8LQh9mgAHOOB46DvXIR/zYX8b2LcX9cx6Hw37HiOfesO+J+gn
1cz6Cz4M/S6Z7RGc4WDfI6y3AQ4015dtfrHeqjrgsg71UgD53xb+HmXmS8Fp
0HeU+/GT75tA3mmsj0G8lwDfcYj/WuCuwEvM9SB8swd4i/v1YJtPZ+Dva8C1
EL9k+GcbcHfon4t58XfNF5Uc+vsoxM8yL9rOS52hXxrqi3xkyQ/ZH4n9jEc1
2Ef+7wL9w839lvq55a8CiKc/4sd5JADn55DPtvlZG/aPd99ewX0grwrkjYE8
9su/ARfA/e8I8iMA9h81r0u+ZABfhn8eQ/8/me+fIj8vvo/NZf3kcz/e5Gdb
/usI+5Yg3yMQjynA8WZ9fruvm+cjWV9n7h/ke8ZD9gdj/yLwc2n48zDqaTHy
ayn6B+f9VOQL+wf5Zz78ORD+i3Twz1Po1wb+zYI/isMfVTQfRZ8meH/h/Xax
eT6wnX+c5p1IyJ9q7gdi3zr425K/5CfxZ1/I849zldc6zvV73k8PA5eDPb7I
F/J5JtZ5f10Ae/ZivRfiuQH5lIb4cp6phvicNs8fYl9BxL8M8FH4swL0+wLn
VcR5vB/y/aYk7A+HfxpD3kDEpwzkX0Y+RiB+Gchn3v8t9S32vAt/bYvOxqL/
FcgbBHkfQ14zxO8W1gfAP7ch3wv1PM08f4o/Pzfzr8j/HN8HwZ9l8P5aF/k2
BN/fwfkjzfOS6POd+lPOGwL52f24euDWkacer/vH2GwcufNBwavhios+KTZ6
7WjFB1v7JVzeE5eNx1Wv2DZPc11vOqp5SMPGiksOaPTd/vaKT2zqtt8jM85V
Xmldnzy73YwyO3Td92h/j0uVdP2cT0Ihn/1xRnmznkYer38TeI7i4DZzzw+9
prh6oxktnj1SnPl+nfLve+p565d0rjF9ja63Oj/wi65bFeerMTl5Wn7Ffysc
N3TVKcWjun0Rc+GE+fzCc1NuJF90kN9T8Rdhi0t2sfi/W8rOSlM/NO/fHZmc
ss8D+7crftUj/Y29W6D/J9A/VnHAsq0TS42B/lMU//DzsQfnzyleduxgjyF3
FP8uf+agj/hzBvQJgLxv4I8QB3/0dbAv0Ywn1ryT78+W+IeW/SVsxQ3FgzOG
1f/HCuRfG7N+Y/ek7nySfZ/9v/6/fftfszuNdNDnE/N51xLXBde7pfLlvMeK
Gxe9fLBOK8U8b13j+0mTh5jPazmm6J86nnA4/x2zPpI/16FfZ90v+nUAvq/7
H32QN21wpsP3lv3Hg540zkrR9ZnzSr/75gb428ds/8CJ3mt373bfH7Z8d1Cx
8F1JBz6bAf8uNvtX5A0Fn7xirm/aS3kSn+bAlnhJ/jc2x8u2Hi18JvW4UeU5
5becN1tx+XDPiPTpDvI9HeLpZeYHyZd85vhXPR6w5dE21Gct6F8d+VHZrP/Z
b6rEl7D0i2+X+15e9h+HfjEQ9m9Wf5IvqR/jK/69pN/n1n/MB7GvnhmLvVNg
75cO/a0I4tUN+XNSsfj/GPLVYp/oMwH8wHiHI96FHewJMNu34A/vTOtg6Z8j
M5vdOXs7l/xI/r5v5nPhx7fA7+S3EmbM+DrlM3HefTXLTCrvwMcWfwsfB8e6
youFvNHu+1fmCYs+wn8HkC+s12Pw1yBzPol+Ecgn5sNpXRf94szxk3hZ+qfg
Bbou9XFTsfjLwq/tLzboOmg1sKUfFvIL6bt0OfitB/zvgXy38NuVcp32+W9x
iLclPjuLta226wfFcn+4pNh2vm+i2HZ+tMx7vC+QD6V/1kd9fWXmP1s+/RCY
/GPpF5yfmH+2fBzn/vxj2596QN5Jc3+W/ExHPkc55K9FXyf+4TxmW9+WfCW/
cv63nc9P4nwn/1jOJ3/Z9t8As3+pv1P9sX7Iv7Z8GmHmA6n/lg7nW/KHfG5b
r0PBL5b+K/3pc7N9widPcd4OlSfx3Qq+zKE/CN6v+4U/9sQa95PvQ9r1mz8h
zewv2uPftNcT7xvu28f53HYet/Rv8ofT/M1+z/xmfbnVzxkPL3M+sB/a8scE
c/+xnZf6m/nHNj7XdJ390zZ+lvuALd94IL4W/qJ+7G/sX7b9hPelmSqf87Nt
vHaAr6ea+VT8NcdcX4JDYd83qJ/94H/yIfl/vO4nv9j6ry++Z/wCET/LPC71
XAvrlvrMmBTj2f6q+/GV+r2nmPFdMnDo0fBC+h4Y1yO8zsOyim3nR1+Hfl4L
OA7+jkJ959A/mT/Mb8FrUI/JOI/z6iH3+73t/HoS5+Xgf9v5s737+fO7+Mii
D/mO9UB7bfmlsVk/p/whH9jGewHWFzrMT8n4/t8xruvB8P9dXSdfsJ+y3zJf
6C/mA/mF9Sz9+aiuu9WfDpn1FVxS10X/gQ58Mxv5msP9iPhA1KjBZx6a+6et
f+JijfKc+Ej4vgnimVt+s7x39v32s7OL1zvMW6WhfyLilwYcr9h7/ifLdhzH
/HXT/XiQ3/n7Ub9PW/26uppieU+13Lf4+5C8xz8zz2t8L+XvOZzXbO+P8xXL
/cgyP+b2vY7vn5TP90/eR23f7y3zIN9bbd/zLPOb031J+Gex2V5b+/4f3x9z
+77I+6xtv+0CPuT7bQ7905bP2a8fKD+T32z5JBH+X2Duf8IXS7Bu6R9O/Vf4
YIT5fL6/cD5yqg/eb2zvx/x9pTLsz8X9mO8D7IdO+cL5gPln+/5l4VO+H/N+
IfNDKvydwzzM+ynvm+yvzFdb/90092Pa48Tn7Hdu+T/AHE/eD5m/4r+PHfpL
M+0f0s87Kub8LfUT5NAfOd9UM+ef1JeFf9lPbe87Fn35PuT0vux03xL5EzBP
WOZzziMyPxRUTL7g/NsoeWLz2qUUy3xQw/z3Ivz9mH8P4VZ/ttzHbfklF79v
837H+znfB536Kfsb6433GcbP9n3ekv/kH76f8nzq79RPqU9u3084T/y37wvs
B//tvM15mPcV1jvnVd4PKJ/vh07vhU7vg+Qrp9/vbN/7TiL//MzzhO3vn8zX
GeCn1xWTfzifSHw8kT+loW8izk+HviHIL0v9unWft9yX2I/dyjfyp6W+WJ/M
L+aP8G1vzR/ez4VPDyJfLfexNScWeCc21O8TU2ePKd5urFE+/96E+cb+7cRn
tu8vheEPy7ybW35g/7N9TzyJfme5v/D+7BR/3v/4nkP+t50nLPcNp3mC9y3O
P+Qz8rPk07vmeYj5wHyV/j0c/TtBMf8+g/cn/n0G36f5Psl48r7E9ztiidd2
xJ98XQ/59ok5n5hvvP8wn1hPvK+zPtjfeL+Q+C0yx4P9g3//wX4g/JiE+6bl
9z/mD++X9AffFyV/1pjzm+9DueVD9gvm64O7y9t95I33WMt94NilpI33q+h6
nUIlipcrgr9PHqD7H+/q3W94umL5e4RQzKeW9xzOW/L+xL+Hs9y/Ob/y70E5
n3EesJXnC3mPIc/ynsy/r+F7Nd+Xbf/eyzIP8/cp5rf46++6zvma70W299d0
2JPD+wzfO9jvOe+JvKwYV3kR+J73t3jU92X9nvwk9hTFe3ZJyPM1z1Pkc/4e
KfmwAfGxzDvMJ/4exfcA8if5i/zN/Zy/+T7PfkT+5nzNecO2H3pCf0v/5zxE
fzLe5COx55bGl/qWzbv2+qk8Kp/nyXvZTt0v9bxXsfTLPzj0u56KhQ/fBp9b
8ln6heX+KfpUjw38H/vejhk=
      "]]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwV0H881Accx3GpTWxJ58cdiXB0fnw7tUJ+dO9i6sjvzsojy6+T5RDOb+e+
PDYU66FURBp2lVG6ZCqz3K6m2VpNXe78Spu10g/u5vfRo93++Dw+j+c/7z9e
VjEpoVxtLS2tAM39/2ef9t6ll53aLvayWfJqC4LsPC1nhyKNVcEJKy0bCQKM
H8bQFEWsrq8XJfErgpEZ3CxfrjjJks3ZJlYxg7FmgnpyQd7Iqo7Mk1//Khij
XYEp0/I21jQ16saQcwh86a9GVHIpS7xHGLJUFIoFuetppfwRy3krJcuSysEd
70uivsYxFulrem/14QiYj976J8bpLcttvJhXaHIQRryDzTreU6z6F0aByzqi
cXKT7w+BnHmWUSl1hXoyFgPVzhKVwTuWz/lEH51xLspEwofapsvQFT9Ee606
BOqpsaOVdcvhc3T1M52BL1Cyl7390ewHcE5EiqgsEenbGg72Fq2EwW/SgY1B
SfCZVOcmj+lhd7wwpnksGYWeIdFmbqvgmxBzv8P5CNxbz7YXdK/G/a5lfPv5
I+DNq8hfVq1BnNlZm9MtqVhwNHhKcCioOP7yW/9DafBsuVx/5owhGM/8e5mm
6VBR/KLCpUagZ6tNpbfS8Xd5VHiajgn22SuZWTF8sCez2M9dqGhK0H5gucjH
m9iV6e1CGh5M8VPqajM0PanaJVJTWGiHeQm2ZILyu91x8aQZzjzv8rbrzoR5
6dVgFxdzMCg3XBNCslDtuM3A8NA66NW5mnD6s/Cr2Y6tUycs4L6o//wwJxvu
5tIKZr8lmubT9g4MZUN/eSM/umg9HHanHnMPz4FFoaXnfjsrWN9//WGrPAe6
tgc6Qu9ZobPM1a0tLBcbvUyvZkVaQ9/RuEpyNxdpTyl3/LRscKDYl93gmYfJ
qXIOu9oGW0Yuioyb87CL2VPDJujIDo9nMA3zcXvKY3HuAR07Py5sGynKR7LT
5sE+ri0m8np4ypf58JqIk+3XtUOU3U89kRwBPqXTAlY1akz0lNTcFIBBHsuW
um5AgYJRYkwrgAN3W7ft4Ab4uInXXhcUgHs74cv2VAZ2j9L/+HmwAN31sjiV
sT2GI/bV3PMSYrrp/Rzzhj3aOKXDTnVCxNq26NYEOEC5rjmqdloIlUOlS5vS
AXx9l0t/MUjcFC3+OVPqCIvLtkkNYSQifGzgYeGEsXb/iuF8EmuTSm5tlDhB
vuZCwkgTCWM93rWAzwiYlAVRvPtIiLwFucr9hKZ3qs6sxpsFx70rDxCwrnJV
Nj0iEagUP1FEE1C7Xz+nLyNR3D+zEMsj0CevjR7oJzHfKNyZW0iA8tHVc7xh
EoMelY8vthAItRaPHX1BIiFDdI7dSoAqI4M9XpKYbf2e+0ZMoPqKw7U3GlOs
FXObOggIhQaBQa9I+K9cZ/6jhEChVdis4VsSXbKLcY+fEBjkbNCu/ZeEn/5N
IlNBgJsRcsV/ioRiV+8sbYjA7Ccpe5Y0nu58Xfr5MwKM9eXxkTMkiAbnK+Ov
CMx9k6NnOa/ZG9yRWf6WgMuFZM5Djf2MwlhMJQFJXNwp4QKJ+JKMPv4MgaWz
+yZG1Zo9SXENdZ6AIDRCt2KRRJG6KrZTTWDcL5aGJRIGW75zinyn6WGTsVap
8fmkzpn37wnwBSco9e9I/Ad3tTCV
        "]]},
      Annotation[#, "Charting`Private`Tag$18695980#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"Number of Carbons\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Boiling Point\"", HoldForm], TraditionalForm]},
  AxesOrigin->{7.895833333333352, 394.584748184347},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{507.2421875, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Boiling Point vs. Number of Carbons\"", TraditionalForm],
  PlotRange->{{7.895833333333352, 13.}, {394.584748184347, 508.4802206548153}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]],
 CellChangeTimes->{{3.866904008356428*^9, 3.8669040541692953`*^9}, {
   3.866904148451921*^9, 3.86690415258431*^9}, 3.866904235336596*^9, {
   3.866904396505187*^9, 3.866904417853765*^9}, 3.866946804101727*^9, 
   3.866946942353134*^9, {3.866947002267231*^9, 3.866947029398861*^9}, 
   3.8669470784795303`*^9},ExpressionUUID->"49af1cc3-06c9-4246-8ec5-\
a48050fbe6e0"]], "Text",
 CellChangeTimes->{{3.8349119580428677`*^9, 3.834911963539082*^9}, 
   3.866947430691164*^9},ExpressionUUID->"1b7a26c9-9f1a-4abd-a58b-\
6ec9a3bc7fe1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["What have you done to this point?", "Section",
 CellChangeTimes->{{3.834911115161586*^9, 
  3.83491112803767*^9}},ExpressionUUID->"cdeb716f-d530-478a-bfaf-\
1db1e06d0ccb"],

Cell["\<\
I have recreated Wiener\[CloseCurlyQuote]s original results (of predicting \
the boiling point purely based on the structure).\
\>", "Item",
 CellChangeTimes->{
  3.834911131005073*^9, {3.834911329873847*^9, 3.834911329874045*^9}, {
   3.866960231883175*^9, 
   3.866960262823536*^9}},ExpressionUUID->"18c3a7fe-94fe-48cb-9521-\
472195323959"],

Cell["I have optimized a solution to generate isomers of alkanes.", "Item",
 CellChangeTimes->{
  3.834911131005073*^9, {3.83491133051229*^9, 3.834911330512537*^9}, {
   3.866967386210206*^9, 3.866967410473337*^9}, {3.866969984461216*^9, 
   3.8669700318725567`*^9}, {3.866972554233267*^9, 
   3.866972555447645*^9}},ExpressionUUID->"92f324f9-513c-4be5-ac84-\
b99868151729"],

Cell["\<\
I have created a function to find alkanes whose boiling point is near a given \
value by brute forcing.\
\>", "Item",
 CellChangeTimes->{
  3.834911131005073*^9, {3.8669780607352037`*^9, 
   3.866978096986023*^9}},ExpressionUUID->"4dc81689-74f7-49f9-826d-\
f2dcca8e3ff3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["What is something you are proud of?", "Section",
 CellChangeTimes->{{3.834911133829611*^9, 
  3.834911143293015*^9}},ExpressionUUID->"cf3cef04-d913-4fa8-bd0c-\
5cc75c7e414d"],

Cell["\<\
The fastest(?) alkane isomer generator in Wolfram Language that I can find \
online.\
\>", "Item",
 CellChangeTimes->{
  3.834911145129816*^9, {3.834911333072277*^9, 3.8349113330724907`*^9}, {
   3.86697537859619*^9, 3.866975400201379*^9}, {3.866982799521675*^9, 
   3.866982804812868*^9}},ExpressionUUID->"32c00754-ebfc-464b-bf1a-\
460a6ef6021f"],

Cell["", "Item",
 CellChangeTimes->{
  3.834911145129816*^9},ExpressionUUID->"53642945-a267-41a8-9362-\
da3999d3dd2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["What is your plan for next steps?", "Section",
 CellChangeTimes->{{3.834911165747037*^9, 
  3.834911176538205*^9}},ExpressionUUID->"c7289ec6-4c58-4c1a-b6d4-\
64c47e1bd78c"],

Cell["\<\
(Maybe?) Find the graph with a give Wiener index with something other that \
exhaustive search/brute forcing. Is this feasible?\
\>", "Item",
 CellChangeTimes->{
  3.8349113269640408`*^9, {3.8669714005891323`*^9, 3.866971456463354*^9}, {
   3.866978124272303*^9, 
   3.866978128323318*^9}},ExpressionUUID->"1ea8c40c-179c-41e0-a47e-\
6e01da103dcd"],

Cell["\<\
Find a new empirical way to approximate the boiling point of unbranched \
alkanes rather than the century-old Egloff\[CloseCurlyQuote]s equation (doesn\
\[CloseCurlyQuote]t work well for large molecules).\
\>", "Item",
 CellChangeTimes->{
  3.8349113269640408`*^9, {3.8669714005891323`*^9, 3.866971456463354*^9}, {
   3.866978124272303*^9, 
   3.8669782126839933`*^9}},ExpressionUUID->"4f281d50-47e2-454b-ac73-\
c562b2fc2ed3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{939, 518},
WindowMargins->{{58, Automatic}, {Automatic, 38}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.1 for Mac OS X ARM (64-bit) (June 21, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"822b4011-4637-4ada-b2fb-22e7ec3cabcd"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 188, 3, 98, "Title",ExpressionUUID->"f86c9257-973f-4b4e-969e-e89eada41706"],
Cell[CellGroupData[{
Cell[793, 29, 432, 9, 69, "Chapter",ExpressionUUID->"384c0499-780f-411a-840c-a09cfb0edaac"],
Cell[1228, 40, 391, 8, 32, "Item",ExpressionUUID->"83191a84-1ad5-4c23-abdc-1a98222f4531"],
Cell[1622, 50, 329, 6, 32, "Item",ExpressionUUID->"271be3ac-b5ec-40da-a59c-3123b3828ec0"],
Cell[CellGroupData[{
Cell[1976, 60, 299, 5, 32, "Item",ExpressionUUID->"5da9f0b9-8f8a-4bb6-8227-eb5fb2667a0f"],
Cell[2278, 67, 362, 8, 27, "Subitem",ExpressionUUID->"9e149bab-682d-4a82-8a77-22761d07de87"],
Cell[2643, 77, 437, 9, 27, "Subitem",ExpressionUUID->"3fb768d6-e14a-42b3-8079-9256f2f58f51"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3117, 91, 378, 7, 32, "Item",ExpressionUUID->"79686d62-fd1c-4c87-9503-293160fd4f1b"],
Cell[3498, 100, 313, 7, 27, "Subitem",ExpressionUUID->"69bbb220-af45-4fdb-a5fd-3299ff7c6bf6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3848, 112, 343, 7, 67, "Section",ExpressionUUID->"8e1a6e04-0f38-4de9-a91c-f010a4880799"],
Cell[4194, 121, 187, 4, 32, "Item",ExpressionUUID->"ca9937f8-0b5a-499d-a7d4-8813aba20b6a"],
Cell[CellGroupData[{
Cell[4406, 129, 186, 4, 32, "Item",ExpressionUUID->"eee3b728-119e-4f3d-8bae-0eb8978a1f66"],
Cell[4595, 135, 152, 3, 30, "Input",ExpressionUUID->"d1540535-b63d-41dd-bc2b-5460a81f8cc6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4796, 144, 282, 5, 67, "Section",ExpressionUUID->"ed1c8639-b66f-47be-9b32-2b97cdaefae2"],
Cell[5081, 151, 142, 3, 32, "Item",ExpressionUUID->"07e841e5-6731-47e1-94e1-a1598a949682"],
Cell[5226, 156, 118, 3, 32, "Item",ExpressionUUID->"2379b514-d571-4e9b-89c7-40fb04ce83d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5381, 164, 295, 4, 67, "Section",ExpressionUUID->"d57b9778-9e1e-40df-9402-5a48abd54b9b"],
Cell[5679, 170, 142, 3, 32, "Item",ExpressionUUID->"2f841ecd-d980-47b0-afa6-8a754c01c9aa"],
Cell[5824, 175, 118, 3, 32, "Item",ExpressionUUID->"5b60512b-cc45-4173-9ea7-32574e580712"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[5991, 184, 404, 8, 106, "Chapter",ExpressionUUID->"6617ebe3-3427-45e9-a0cd-1bcdde6da197"],
Cell[6398, 194, 249, 4, 32, "Item",ExpressionUUID->"ef4718c6-0f8f-492a-b0df-eadcbd6cb0f6"],
Cell[6650, 200, 311, 7, 32, "Item",ExpressionUUID->"f3179f58-36a1-46c7-8436-25a9ef47df22"],
Cell[6964, 209, 222, 5, 32, "Item",ExpressionUUID->"e297f8d3-ef49-4a98-a5bc-7325e0d77960"],
Cell[7189, 216, 266, 6, 32, "Item",ExpressionUUID->"25e875f5-8c32-4aee-8488-49e4d0abf91e"],
Cell[7458, 224, 179, 3, 67, "Section",ExpressionUUID->"4a81fb29-59c8-4cc4-9686-86e9e1eb89d5"],
Cell[7640, 229, 255, 6, 53, "Section",ExpressionUUID->"0a8641af-4996-4b9b-b755-a9f9f76e2328"],
Cell[CellGroupData[{
Cell[7920, 239, 297, 7, 53, "Section",ExpressionUUID->"2a348d9d-ca9c-4dfe-b97e-e60bde1dd231"],
Cell[8220, 248, 414, 11, 32, "Item",ExpressionUUID->"b5b51583-cbaa-4492-be21-6266511db69e"],
Cell[8637, 261, 406, 8, 53, "Item",ExpressionUUID->"288bcfbf-2b17-4589-b911-c5caafe36da9"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[9092, 275, 365, 7, 58, "Chapter",ExpressionUUID->"b34a677a-f4a0-4656-bd16-82571ae816ed"],
Cell[9460, 284, 184, 3, 32, "Item",ExpressionUUID->"ea8edf34-d117-4ada-b6f0-40ed745c1729"],
Cell[9647, 289, 231, 6, 32, "Item",ExpressionUUID->"ffe9a1af-4c53-48ab-bafc-69e741257026"],
Cell[CellGroupData[{
Cell[9903, 299, 230, 8, 32, "Item",ExpressionUUID->"361f1761-79e8-47e3-a8cf-d8f75dd4b500"],
Cell[10136, 309, 176, 3, 27, "Subitem",ExpressionUUID->"81e47197-c70e-48db-b458-c14d4f57df6c"],
Cell[10315, 314, 175, 3, 27, "Subitem",ExpressionUUID->"d1d88744-0404-468a-b360-31476c19e6da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10527, 322, 171, 3, 32, "Item",ExpressionUUID->"791b94fa-2ee4-4779-8fb8-b61fe1915bd1"],
Cell[10701, 327, 225, 4, 27, "Subitem",ExpressionUUID->"f0789e20-482e-40fd-beb5-95919f8ca809"],
Cell[10929, 333, 302, 7, 27, "Subitem",ExpressionUUID->"4c6c1c48-2795-469c-96d3-d9cbb08193eb"],
Cell[11234, 342, 368, 8, 45, "Subitem",ExpressionUUID->"eb6afe36-1af1-4477-a834-3f8bd5048084"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11639, 355, 267, 6, 67, "Section",ExpressionUUID->"fba41f63-831f-44b6-b7cb-806d5480a21e"],
Cell[CellGroupData[{
Cell[11931, 365, 1786, 44, 167, "Code",ExpressionUUID->"50896f96-92ae-48cf-ac93-705a53eae90e"],
Cell[13720, 411, 46395, 1174, 175, "Output",ExpressionUUID->"37f3d237-1aa1-48d5-8da1-d351482113a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60152, 1590, 2421, 57, 136, "Code",ExpressionUUID->"385018e7-ca10-478a-ae3c-68974dac1eaa"],
Cell[62576, 1649, 119968, 1971, 224, "Output",ExpressionUUID->"c735ab82-25f9-4a41-9030-ed14a06b96d2"]
}, Open  ]],
Cell[182559, 3623, 153, 3, 35, "Text",ExpressionUUID->"72034e05-a4b7-408a-8cfa-096a38682ac2"],
Cell[182715, 3628, 10099, 185, 295, "Text",ExpressionUUID->"1b7a26c9-9f1a-4abd-a58b-6ec9a3bc7fe1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192851, 3818, 177, 3, 67, "Section",ExpressionUUID->"cdeb716f-d530-478a-bfaf-1db1e06d0ccb"],
Cell[193031, 3823, 352, 8, 32, "Item",ExpressionUUID->"18c3a7fe-94fe-48cb-9521-472195323959"],
Cell[193386, 3833, 374, 6, 32, "Item",ExpressionUUID->"92f324f9-513c-4be5-ac84-b99868151729"],
Cell[193763, 3841, 281, 7, 32, "Item",ExpressionUUID->"4dc81689-74f7-49f9-826d-f2dcca8e3ff3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194081, 3853, 180, 3, 67, "Section",ExpressionUUID->"cf3cef04-d913-4fa8-bd0c-5cc75c7e414d"],
Cell[194264, 3858, 357, 8, 32, "Item",ExpressionUUID->"32c00754-ebfc-464b-bf1a-460a6ef6021f"],
Cell[194624, 3868, 118, 3, 32, "Item",ExpressionUUID->"53642945-a267-41a8-9362-da3999d3dd2c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194779, 3876, 178, 3, 67, "Section",ExpressionUUID->"c7289ec6-4c58-4c1a-b6d4-64c47e1bd78c"],
Cell[194960, 3881, 357, 8, 32, "Item",ExpressionUUID->"1ea8c40c-179c-41e0-a47e-6e01da103dcd"],
Cell[195320, 3891, 436, 9, 53, "Item",ExpressionUUID->"4f281d50-47e2-454b-ac73-c562b2fc2ed3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

